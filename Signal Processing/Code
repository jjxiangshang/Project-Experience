%% 1. Based on the Fourier domain signal, determine the bandwidth (wM) of the soundtrack signal. In other words, |F(jw)|=0 for |w|>wM.
clear
load handel.mat; 
soundtrack_length=64*1024; 
t=(1:1:soundtrack_length)*(1/Fs);% time
                                 %Fs is a variable of type double
soundtrack=y(1:soundtrack_length);% signal
sound(soundtrack)
omega_max=2*pi*Fs/2;
omega=linspace(-omega_max,omega_max,soundtrack_length); 
d_omega=omega(2)-omega(1); 
soundtrack_FD=fft(soundtrack);
figure, plot(t,soundtrack)
xlabel('time (s)','FontSize',26)
ylabel('signal magnitude (a.u.)','FontSize',26)
figure
plot(omega,abs (fftshift(soundtrack_FD)))
xlabel('\omega (rad/s)','FontSize',26)
ylabel('signal magnitude (a.u.)','FontSize',26)
str_omega_m =['w_m=',num2str(max(omega))];
text(max(omega),0,str_omega_m,'color','red','HorizontalAlignment','right','FontSize',16)
%% 2. Based on the sound effect of the audio signal (soundtrack_filtered), determine if the filter is lowpass or highpass. Plot the Fourier domain signal soundtrack_FD_filtered to confirm.
Cutoff_F=1000;
F_c=round(Cutoff_F*2*pi/d_omega);
F_1=zeros(size(soundtrack_FD));
F_1(1:F_c+1)=1; 
F_1(soundtrack_length-F_c+1:soundtrack_length)=1;
soundtrack_FD_filtered=F_1.*soundtrack_FD; 
soundtrack_filtered=ifft(soundtrack_FD_filtered); 
sound(soundtrack_filtered)
figure
plot(t,soundtrack_filtered),
xlabel('time(s)','FontSize',26)
ylabel('signal magnitude (a.u)','FontSize',26)
figure
plot(omega,abs(fftshift(soundtrack_FD_filtered))),
xlabel('omega (rad/s)','FontSize',26)
ylabel('signal magnitude (a.u)','FontSize',26)
%low pass filter
%% 3. Simulate the process of amplitude modulation and demodulation of the signal, as shown in the following block diagram.
S0_t=soundtrack_filtered;%S0(t)
S0_jw=fft(S0_t);%S0(jw)
figure
subplot(3,1,1);
plot(omega,abs(fftshift(S0_jw))),title('S0(jw)','FontSize',30),
xlabel('omega'),
ylabel('Amplitude');
X1=sin(2*pi*2*1000*t);
S1_t=S0_t.*X1';%S1(t)
subplot(3,1,2);
S1_jw=fft(S1_t);%S1(jw)
plot(omega,abs(fftshift(S1_jw))),title('S1(jw)','FontSize',30),
xlabel('omega'),
ylabel('Amplitude');
X2=2*sin(2*pi*2*1000*t);
S2_t=S1_t.*X2';%S2(t)
S2_jw=fft(S2_t);%S2(jw)
subplot(3,1,3);
plot(omega,abs(fftshift(S2_jw))),title('S2(jw)','FontSize',30)
xlabel('omega'),
ylabel('Amplitude');
Cutoff_F=1000;
F_c=round(Cutoff_F*2*pi/d_omega);
F_1=zeros(size(S2_jw));
F_1(1:F_c+1)=1; 
F_1(soundtrack_length-F_c+1:soundtrack_length)=1;
figure
plot(omega,abs(fftshift(F_1))),title('Low-pass filter H(jw)','FontSize',30)
xlabel('oemga'),
ylabel('Amplitude');
S3_jw=F_1.*S2_jw; %S3(jw)
S3_t=ifft(S3_jw);%S3(t)
figure;
subplot(2,1,1)
plot(t,S0_t),
title('S0(t)','FontSize',30)
xlabel('time(sec)'),
ylabel('Amplitude');
subplot(2,1,2)
plot(t,S3_t),title('S3(t)','FontSize',30);
xlabel('time (sec)','FontSize',26),
ylabel('Amplitude','FontSize',26);
